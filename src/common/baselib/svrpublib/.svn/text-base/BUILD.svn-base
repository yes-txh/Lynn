# BUILD script, generated by make2build

gen_rule(
     name = "auto_update_svn_revision_num",
     cmd = "@echo;if [ ! -e ./common/baselib/svrpublib/source/auto_build_version.cc ]; then cp -f ./common/baselib/svrpublib/source/auto_build_version.inl ./common/baselib/svrpublib/source/auto_build_version.cc; fi ; find_len=$$(more ./common/baselib/svrpublib/source/auto_build_version.cc | grep xfs_auto_build_version.h | wc -c); if [ $${find_len} -eq 0 ]; then echo 'incorrect auto_build_version.cc'; cp -f ./common/baselib/svrpublib/source/auto_build_version.inl ./common/baselib/svrpublib/source/auto_build_version.cc; fi",
     outs = "auto_build_version.cc"
)

cc_library(
    name = "svrpublib",
    srcs = [
        "./source/fake_epoll.cc",
        "./source/general_util.cc",
        "./source/lite_mempool.cc",
        "./source/md5c.cc",
        "./source/public_objs.cc",
        "./source/utf8.cc",
        "./source/epoll_lite.cc",
        "./source/general_sock.cc",
        "./source/http_buff.cc",
        "./source/lite_mysql_wrapper.cc",
        "./source/parse_proc.cc",
        "./source/sha1.cc",
        "./source/expandable_array.cc",
        "./source/general_thread_util.cc",
        "./source/key_value_parser.cc",
        "./source/long_conn.cc",
        "./source/parser_cgi_parameter.cc",
        "./source/simple_http.cc",
        "./source/simple_http_proxy.cc",
        "./source/auto_build_version.cc",
        "./source/fast_crc.cc",
        "./source/http_response.cc",
        "./source/http_content.cc",
        "./source/generate_cgi_parameter.cc"
    ],
    deps = [
        "//thirdparty/glog:glog",
        "//common/system/concurrency:concurrency",
        ":auto_update_svn_revision_num"
    ]
)

cc_test(
    name = "base_protocol_test",
    srcs = ["./base_protocol_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "utf8_test",
    srcs = ["./source/utf8_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "http_buff_test",
    srcs = ["./source/http_buff_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "expandable_array_test",
    srcs = ["./source/expandable_array_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "key_value_parser_test",
    srcs = ["./source/key_value_parser_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "parser_cgi_parameter_test",
    srcs = ["./source/parser_cgi_parameter_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "general_util_test",
    srcs = ["./source/general_util_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "parse_proc_test",
    srcs = ["./source/parse_proc_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "general_sock_test",
    srcs = ["./source/general_sock_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "sink_nodes_test",
    srcs = ["./sink_nodes_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "epoll_lite_test",
    srcs = ["./source/epoll_lite_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "general_thread_util_test",
    srcs = ["./source/general_thread_util_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "simple_http_test",
    srcs = ["./source/simple_http_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "fake_epoll_test",
    srcs = ["./source/fake_epoll_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "timed_node_list_test",
    srcs = ["./timed_node_list_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "epoll_write_test",
    srcs = ["./epoll_write_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "epoll_accept_read_test",
    srcs = ["./epoll_accept_read_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "log_test",
    srcs = ["./log_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "lite_mempool_test",
    srcs = ["./source/lite_mempool_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "md5c_test",
    srcs = ["./source/md5c_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "sha1_test",
    srcs = ["./source/sha1_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "public_objs_test",
    srcs = ["./source/public_objs_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "long_conn_test",
    srcs = ["./source/long_conn_test.cc"],
    deps = [":svrpublib"]
)

cc_test(
    name = "http_response_test",
    srcs = ["./source/http_response_test.cc"],
    deps = [":svrpublib"]
)
