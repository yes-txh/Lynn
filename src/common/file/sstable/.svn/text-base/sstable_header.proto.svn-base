package sstable;

message SSTableOptions {
    // 参见 sstable_def.h 中的 RecordKVType
    // sstable中存储的key和val的类型，取值如下：
    // 0x11 定长key，定长value
    // 0x12 定长key，变长value
    // 0x21 变长key，定长value
    // 0x22 变长key，变长value
    // 定长类型的优势在于 record 中不需要记录长度信息，可以节约空间
    optional uint32 kv_type = 1 [default = 0x22];

    // 参见 xcube/ts/compress/block_compress_codec.h
    // sstable的数据压缩算法，默认为None表示不压缩
    optional uint32 compress_type = 2 [default = 0];

    optional uint32 fixed_key_len = 3 [default = 0];         ///< 对固定长度的key,为Key的长度;
                                               ///< 对非固定长度的Key,为0;
    optional uint32 fixed_data_len = 4 [default = 0];        ///< 对固定长度的data,该值为data的长度;
                                               ///< 非固定长度的,为0;
    optional uint32 threshold_len = 5 [default = 12];         ///< 用于非定长key选取basekey的;
                                               ///< 与上一个basekey的公共前缀串长度阈值;

    optional uint32 threshold_diff = 6 [default = 8];        ///< 用于非定长key选取basekey的阈值
                                               ///< 表示与前一个key的公共前缀串长度和
                                               ///< 与当前basekey的公共前缀串长度的差值;

    // 在已知最大记录个数的情况下，可以设置这个参数用于打开
    // bloom filter 以提高不存在的 key 的访问效率。
    // 默认值为0 表示不使用 bloom filter。
    optional uint64 bloomfilter_size = 7 [default = 0];
    optional double bloomfilter_prob = 8 [default = 0.01];     ///< bloomfilter的冲突概率;
    optional uint64 block_size = 9 [default = 4194304];  ///< block的大小, 默认为4M;
}

message BloomFilterBlock {
    required uint64 bloomfilter_offset = 1;    ///< bloomfilter块的偏移量;
    required uint64 bloomfilter_length = 2;    ///< bloomfilter块的长度;
    required uint64 bloomfilter_hash_num = 3;  ///< bloomfilter的hash数目;
}

message SSTableHeader
{
    required SSTableOptions options = 1;
    required uint64 sstable_id = 2;            ///< sstable_id号;

    required uint64 num_records = 3;            ///< sstable的记录数;
    required uint64 raw_length = 4;            ///< 压缩前的长度;
    required uint64 compressed_len = 5;        ///< 压缩后的长度;

    required uint64 index_compressed_length = 7;  ///< 索引块的压缩后的长度;
    required uint64 index_raw_length = 8;      ///< 索引块压缩前的长度;
    required uint64 index_offset = 9;          ///< 索引块的偏移量;

    optional BloomFilterBlock bloomfilter_block = 10;    ///< bloomfilter块的相关信息;
};
