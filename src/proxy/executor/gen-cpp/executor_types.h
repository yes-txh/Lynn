/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef executor_TYPES_H
#define executor_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "scheduler_types.h"
#include "collector_types.h"




struct TaskEntityState {
  enum type {
    TASKENTITY_NOTFOUND = 0,
    TASKENTITY_WAITING = 1,
    TASKENTITY_STARTING = 2,
    TASKENTITY_RUNNING = 3,
    TASKENTITY_FINISHED = 4,
    TASKENTITY_FAILED = 5
  };
};

extern const std::map<int, const char*> _TaskEntityState_VALUES_TO_NAMES;

struct VMType {
  enum type {
    VM_UNKNOWN = 0,
    VM_KVM = 1,
    VM_LXC = 2
  };
};

extern const std::map<int, const char*> _VMType_VALUES_TO_NAMES;

struct VMState {
  enum type {
    VM_NOTFOUND = 0,
    VM_OFFLINE = 1,
    VM_ONLINE = 2,
    VM_SERVICE_ONLINE = 3
  };
};

extern const std::map<int, const char*> _VMState_VALUES_TO_NAMES;



#endif
